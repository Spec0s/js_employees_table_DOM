{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableHead","tableBody","rows","orders","errorMessage","isValid","toNumbers","string","replace","toSalary","split","salary","x","i","length","push","reverse","join","sortBy","filter","index","sort","a","b","children","innerHTML","localeCompare","addEventListener","e","thIndex","target","cellIndex","tagName","forEach","row","append","tr","parentNode","isActive","classList","remove","add","createForm","newForm","createElement","newButton","naming","offices","type","fieldName","toLowerCase","label","select","office","option","setAttribute","input","after","addEmploye","arguments","field","td","typeOfNotification","div","h2","paragraph","notificationStatus","message","addNotification","nStatus","divNotification","h2Notification","pNotification","form","setTimeout","inputName","inputPosition","inputOffice","inputAge","inputSalary","checkIfValid","formName","formPosition","formAge","formSalary","every","toUpperCase","trim","preventDefault","value","employeeName","err","eMain","inputs","querySelectorAll","lastChild","cloneNode","backupValue","focus","removeAndUpdate","name","key","removeEventListener"],"mappings":"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","file":"main.cd1e1e8d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nlet rows = [...tableBody.rows];\nconst orders = ['default', 'default', 'default', 'default', 'default'];\nlet errorMessage = '';\nlet isValid = true;\n\nfunction toNumbers(string) {\n  return +string.replace(/[$,]/g, '');\n}\n\nfunction toSalary(string) {\n  const split = string.split('');\n  const salary = [];\n  let x = 0;\n\n  for (let i = split.length - 1; i >= 0; i--) {\n    if (x % 3 === 0 && x !== 0) {\n      salary.push(',');\n    }\n    salary.push(split[i]);\n    x++;\n  }\n\n  return `$${salary.reverse().join('')}`;\n}\n\nfunction sortBy(filter, index) {\n  switch (filter) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      orders[index] !== 'asc'\n        ? rows.sort(\n          (a, b) => b.children[index].innerHTML\n            .localeCompare(a.children[index].innerHTML)\n        )\n        : rows.sort(\n          (a, b) => a.children[index].innerHTML\n            .localeCompare(b.children[index].innerHTML)\n        );\n      break;\n    case 'Age':\n    case 'Salary':\n      orders[index] !== 'asc'\n        ? rows.sort(\n          (a, b) => toNumbers(b.children[index].innerHTML)\n            - toNumbers(a.children[index].innerHTML)\n        )\n        : rows.sort(\n          (a, b) => toNumbers(a.children[index].innerHTML)\n            - toNumbers(b.children[index].innerHTML)\n        );\n      break;\n  }\n}\n\ntableHead.addEventListener('click', e => {\n  rows = [...tableBody.rows];\n\n  const thIndex = e.target.cellIndex;\n\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  orders[thIndex] !== 'asc'\n    ? orders[thIndex] = 'asc'\n    : orders[thIndex] = 'dsc';\n\n  for (const index in orders) {\n    if (+index !== thIndex) {\n      orders[index] = 'default';\n    }\n  }\n\n  sortBy(e.target.innerHTML, e.target.cellIndex);\n\n  rows.forEach(row => {\n    tableBody.append(row);\n  });\n});\n\ndocument.addEventListener('click', e => {\n  const tr = e.target.parentNode;\n  const isActive = tableBody.querySelector('.active');\n\n  if (e.target.tagName !== 'TD') {\n    if (isActive) {\n      isActive.classList.remove('active');\n    }\n\n    return;\n  }\n\n  if (isActive) {\n    isActive.classList.remove('active');\n  }\n\n  tr.classList.add('active');\n});\n\nconst createForm = () => {\n  const newForm = document.createElement('form');\n  const newButton = document.createElement('button');\n  const naming = [\n    'Name: ', 'Position: ', 'Office: ', 'Age: ', 'Salary: ',\n  ];\n  const offices = [\n    `Tokyo`, `Singapore`, `London`, `New York`, `Edinburgh`, `San Francisco`,\n  ];\n\n  for (let i = 0; i <= 4; i++) {\n    const type = i <= 2 ? 'name' : 'number';\n    const fieldName = naming[i].replace(': ', '').toLowerCase();\n    const label = document.createElement('label');\n\n    if (i === 2) {\n      const select = document.createElement('select');\n\n      offices.forEach(office => {\n        const option = document.createElement('option');\n\n        option.setAttribute('value', office);\n        option.innerHTML = office;\n        select.append(option);\n      });\n\n      select.setAttribute('name', fieldName);\n      label.innerHTML = naming[i];\n\n      label.append(select);\n    } else {\n      const input = document.createElement('input');\n\n      label.innerHTML = naming[i];\n      input.setAttribute('name', fieldName);\n      input.setAttribute('type', type);\n      input.setAttribute('data-qa', fieldName);\n\n      label.append(input);\n    }\n    newForm.append(label);\n  }\n\n  newButton.innerHTML = 'Save to table';\n  newForm.append(newButton);\n  newForm.classList.add('new-employee-form');\n  table.after(newForm);\n};\n\ncreateForm();\n\nfunction addEmploye() {\n  const tr = document.createElement('tr');\n  const naming = [...arguments];\n\n  naming.forEach(field => {\n    const td = document.createElement('td');\n\n    td.innerHTML = field;\n    tr.append(td);\n  });\n\n  tableBody.append(tr);\n}\n\nfunction typeOfNotification(div, h2, paragraph, notificationStatus, message) {\n  h2.innerHTML = notificationStatus;\n  paragraph.innerHTML = message;\n  div.classList.add(notificationStatus.toLowerCase());\n}\n\nfunction addNotification(nStatus, message) {\n  const divNotification = document.createElement('div');\n  const h2Notification = document.createElement('h2');\n  const pNotification = document.createElement('p');\n\n  divNotification.classList.add('notification');\n  h2Notification.classList.add('notification.title');\n\n  typeOfNotification(\n    divNotification,\n    h2Notification,\n    pNotification,\n    nStatus,\n    message,\n  );\n\n  divNotification.setAttribute('data-qa', 'notification');\n  divNotification.append(h2Notification);\n  divNotification.append(pNotification);\n  form.after(divNotification);\n\n  setTimeout(() => {\n    divNotification.remove();\n  }, 2000);\n}\n\nconst form = document.querySelector('form');\nconst inputName = form.querySelector('[name=\"name\"]');\nconst inputPosition = form.querySelector('[name=\"position\"]');\nconst inputOffice = form.querySelector('[name=\"office\"]');\nconst inputAge = form.querySelector('[name=\"age\"]');\nconst inputSalary = form.querySelector('[name=\"salary\"]');\n\nfunction checkIfValid(formName, formPosition, formAge, formSalary) {\n  errorMessage = 'something wrong';\n  isValid = true;\n\n  if (\n    !formName\n      .split('')\n      .every(a => a.toLowerCase() !== a.toUpperCase() || a === ' ')\n  ) {\n    errorMessage = 'Only alphabetic characters allowed';\n    isValid = false;\n\n    return errorMessage;\n  };\n\n  if (formName.trim().length < 4) {\n    errorMessage = 'Name minimum length 4';\n    isValid = false;\n\n    return errorMessage;\n  };\n\n  if (formPosition.trim().length === 0) {\n    errorMessage = 'Position can\\'t be empty';\n    isValid = false;\n\n    return errorMessage;\n  };\n\n  if (formAge < 18 || formAge > 90) {\n    errorMessage = 'Age can\\'t be more than 90 or less than 18';\n    isValid = false;\n\n    return errorMessage;\n  };\n\n  if (formSalary <= 0 || !formSalary) {\n    errorMessage = 'Salary can\\'t be empty or negative';\n    isValid = false;\n\n    return errorMessage;\n  }\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  checkIfValid(\n    inputName.value,\n    inputPosition.value,\n    inputAge.value,\n    inputSalary.value,\n  );\n\n  try {\n    const salary = toSalary(inputSalary.value);\n    const employeeName = inputName.value;\n\n    if (isValid) {\n      addEmploye(\n        inputName.value.trim(),\n        inputPosition.value.trim(),\n        inputOffice.value,\n        inputAge.value,\n        salary,\n      );\n\n      inputName.value = '';\n      inputPosition.value = '';\n      inputOffice.value = 'Tokyo';\n      inputAge.value = '';\n      inputSalary.value = '';\n\n      return addNotification('Success', `${employeeName} added`);\n    }\n  } catch (err) {\n    return addNotification('Error', err.message);\n  }\n\n  return addNotification('Warning', errorMessage);\n});\n\ntableBody.addEventListener('dblclick', eMain => {\n  if (eMain.target.tagName === 'TD') {\n    const inputs = form.querySelectorAll('label');\n    const inputsArr = [...inputs];\n    const input = inputsArr[eMain.target.cellIndex].lastChild.cloneNode(true);\n    const backupValue = eMain.target.innerHTML;\n\n    input.value = eMain.target.innerHTML;\n    eMain.target.innerHTML = '';\n\n    eMain.target.append(input);\n    input.focus();\n\n    const removeAndUpdate = () => {\n      switch (input.name) {\n        case 'name':\n          if (\n            !input.value\n              .split('')\n              .every(a => a.toLowerCase() !== a.toUpperCase()\n                || a === ' ')\n                || input.value.trim().length < 4\n          ) {\n            eMain.target.innerHTML = backupValue;\n            addNotification('Warning', 'Name length > 4 and only letters');\n\n            return;\n          };\n          break;\n\n        case 'age':\n          if (input.value < 18 || input.value > 90) {\n            eMain.target.innerHTML = backupValue;\n            addNotification('Warning', 'Age can\\'t be < 18 and > 90');\n\n            return;\n          };\n          break;\n\n        case 'salary':\n          if (input.value <= 0) {\n            eMain.target.innerHTML = backupValue;\n            addNotification('Warning', 'Salary can\\'t be negative');\n\n            return;\n          } else {\n            eMain.target.innerHTML = input.value.trim()\n              ? toSalary(input.value)\n              : backupValue;\n\n            return;\n          };\n      }\n\n      input.remove();\n      eMain.target.innerHTML = input.value.trim() ? input.value : backupValue;\n    };\n\n    input.addEventListener('blur', removeAndUpdate);\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        input.removeEventListener('blur', removeAndUpdate);\n        removeAndUpdate();\n      }\n    });\n  }\n});\n"]}